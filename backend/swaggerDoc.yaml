openapi: 3.0.3
info:
  title: Charity Platform API
  description: API for managing charity ads, announcements, incidents, news, volunteers, organizations, reports, and users.
  version: 1.0.0
servers:
  - url: /api
    description: Local development server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Announcement:
      type: object
      required:
        - title
        - description
        - charities
      properties:
        title:
          type: string
          minLength: 4
          pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
        description:
          type: string
          minLength: 4
          maxLength: 300
          pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
        charities:
          type: array
          items:
            type: object
            required:
              - charity
            properties:
              charity:
                type: string
                format: objectId
              response:
                type: string
                enum: [Pending, Accepted, Rejected]
                default: Pending
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Incident:
      type: object
      required:
        - type
        - title
        - description
        - dateOccurred
        - location
      properties:
        type:
          type: string
          minLength: 4
          pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
        title:
          type: string
          minLength: 4
          pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
        description:
          type: string
          minLength: 4
          maxLength: 300
          pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
        dateOccurred:
          type: string
          format: date-time
        location:
          type: object
          required:
            - type
            - coordinates
          properties:
            type:
              type: string
              enum: [Point]
            coordinates:
              type: array
              items:
                type: number
              minItems: 2
              maxItems: 2
        status:
          type: string
          enum: [pending, validated]
          default: pending
        reports:
          type: array
          items:
            type: string
            format: objectId
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    User:
      type: object
      required:
        - firstName
        - lastName
        - email
        - phone
        - password
        - role
      properties:
        firstName:
          type: string
          minLength: 4
          pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
        lastName:
          type: string
          minLength: 4
          pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
        email:
          type: string
          format: email
        phone:
          type: string
        password:
          type: string
        role:
          type: string
          enum: [user, admin]
          default: user
        image:
          type: string
          default: default-profile.png
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    CharityAd:
      type: object
      required:
        - charity
        - title
        - description
      properties:
        charity:
          type: string
          format: objectId
        incident:
          type: string
          format: objectId
          nullable: true
        title:
          type: string
          minLength: 4
          maxLength: 50
          pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
        image:
          type: string
          default: ""
        description:
          type: string
          minLength: 4
          maxLength: 300
          pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
        status:
          type: string
          enum: [open, completed]
          default: open
        volunteers:
          type: array
          items:
            type: string
            format: objectId
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    News:
      type: object
      required:
        - title
        - content
      properties:
        title:
          type: string
          minLength: 4
          pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
        content:
          type: string
          minLength: 4
          maxLength: 300
          pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
        image:
          type: string
          default: ""
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Organization:
      type: object
      required:
        - name
        - email
        - phone
        - password
        - role
      properties:
        name:
          type: string
          minLength: 5
          pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
        email:
          type: string
          format: email
        phone:
          type: string
        password:
          type: string
        image:
          type: string
        mission:
          type: string
          minLength: 5
          maxLength: 100
          pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
        role:
          type: string
          enum: [charity, government]
          default: charity
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Volunteer:
      type: object
      required:
        - user
        - fullName
        - age
        - email
        - phone
        - expertise
        - contribution
      properties:
        user:
          type: string
          format: objectId
        fullName:
          type: string
          minLength: 5
          pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
        sex:
          type: string
          enum: [male, female]
        age:
          type: integer
          minimum: 1
          maximum: 120
        email:
          type: string
          format: email
        phone:
          type: string
          pattern: ^\+?[1-9]\d{1,14}$
        expertise:
          type: string
        contribution:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Report:
      type: object
      required:
        - type
        - description
        - location
      properties:
        type:
          type: string
          minLength: 4
          pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
        title:
          type: string
          minLength: 10
          pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
        description:
          type: string
          minLength: 4
          maxLength: 300
          pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
        image:
          type: string
          default: ""
        location:
          type: object
          required:
            - type
            - coordinates
          properties:
            type:
              type: string
              enum: [Point]
            coordinates:
              type: array
              items:
                type: number
              minItems: 2
              maxItems: 2
        reportedBy:
          type: string
          format: objectId
          nullable: true
        incident:
          type: string
          format: objectId
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Error:
      type: object
      properties:
        message:
          type: string
        status:
          type: integer
paths:
  /announcement:
    get:
      summary: Get all announcements
      tags:
        - Announcements
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of announcements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Announcement"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires admin or charity role
    post:
      summary: Create a new announcement
      tags:
        - Announcements
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Announcement"
      responses:
        "201":
          description: Announcement created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Announcement"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires government role
  /announcement/{id}:
    get:
      summary: Get an announcement by ID
      tags:
        - Announcements
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      responses:
        "200":
          description: Announcement details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Announcement"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Announcement not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update an announcement
      tags:
        - Announcements
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Announcement"
      responses:
        "200":
          description: Announcement updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Announcement"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Announcement not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires government role
    delete:
      summary: Delete an announcement
      tags:
        - Announcements
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      responses:
        "204":
          description: Announcement deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Announcement not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires government or admin role
  /charityad:
    get:
      summary: Get all charity ads
      tags:
        - CharityAds
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of charity ads
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CharityAd"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new charity ad
      tags:
        - CharityAds
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                charity:
                  type: string
                  format: objectId
                incident:
                  type: string
                  format: objectId
                  nullable: true
                title:
                  type: string
                  minLength: 4
                  maxLength: 50
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                description:
                  type: string
                  minLength: 4
                  maxLength: 300
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                image:
                  type: string
                  format: binary
                status:
                  type: string
                  enum: [open, completed]
                  default: open
              required:
                - charity
                - title
                - description
      responses:
        "201":
          description: Charity ad created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CharityAd"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires charity role
    delete:
      summary: Delete all charity ads
      tags:
        - CharityAds
      security:
        - bearerAuth: []
      responses:
        "204":
          description: All charity ads deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires admin role
  /charityad/{id}:
    get:
      summary: Get a charity ad by ID
      tags:
        - CharityAds
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      responses:
        "200":
          description: Charity ad details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CharityAd"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Charity ad not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update a charity ad
      tags:
        - CharityAds
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                charity:
                  type: string
                  format: objectId
                incident:
                  type: string
                  format: objectId
                  nullable: true
                title:
                  type: string
                  minLength: 4
                  maxLength: 50
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                description:
                  type: string
                  minLength: 4
                  maxLength: 300
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                image:
                  type: string
                  format: binary
                status:
                  type: string
                  enum: [open, completed]
              required:
                - charity
                - title
                - description
      responses:
        "200":
          description: Charity ad updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CharityAd"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Charity ad not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires charity role
    delete:
      summary: Delete a charity ad
      tags:
        - CharityAds
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      responses:
        "204":
          description: Charity ad deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Charity ad not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires charity role
  /incidents:
    get:
      summary: Get all incidents
      tags:
        - Incidents
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of incidents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Incident"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires admin or government role
    delete:
      summary: Delete all incidents
      tags:
        - Incidents
      security:
        - bearerAuth: []
      responses:
        "204":
          description: All incidents deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires admin or government role
  /incidents/{id}:
    get:
      summary: Get an incident by ID
      tags:
        - Incidents
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      responses:
        "200":
          description: Incident details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incident"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Incident not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires admin or government role
    delete:
      summary: Delete an incident
      tags:
        - Incidents
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      responses:
        "204":
          description: Incident deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Incident not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires admin or government role
  /news:
    get:
      summary: Get all news
      tags:
        - News
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of news
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/News"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new news item
      tags:
        - News
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  minLength: 4
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                content:
                  type: string
                  minLength: 4
                  maxLength: 300
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                image:
                  type: string
                  format: binary
              required:
                - title
                - content
      responses:
        "201":
          description: News item created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/News"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires government role
    delete:
      summary: Delete all news
      tags:
        - News
      security:
        - bearerAuth: []
      responses:
        "204":
          description: All news deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires admin or government role
  /news/{id}:
    get:
      summary: Get a news item by ID
      tags:
        - News
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      responses:
        "200":
          description: News item details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/News"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: News item not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update a news item
      tags:
        - News
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  minLength: 4
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                content:
                  type: string
                  minLength: 4
                  maxLength: 300
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                image:
                  type: string
                  format: binary
              required:
                - title
                - content
      responses:
        "200":
          description: News item updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/News"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: News item not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires government role
    patch:
      summary: Partially update a news item
      tags:
        - News
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  minLength: 4
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                content:
                  type: string
                  minLength: 4
                  maxLength: 300
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                image:
                  type: string
                  format: binary
      responses:
        "200":
          description: News item updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/News"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: News item not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires government role
    delete:
      summary: Delete a news item
      tags:
        - News
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      responses:
        "204":
          description: News item deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: News item not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires government or admin role
  /volunteer:
    get:
      summary: Get all volunteers
      tags:
        - Volunteers
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of volunteers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Volunteer"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires admin or charity role
    post:
      summary: Register a new volunteer
      tags:
        - Volunteers
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Volunteer"
      responses:
        "201":
          description: Volunteer registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Volunteer"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires user role
    delete:
      summary: Delete all volunteers
      tags:
        - Volunteers
      security:
        - bearerAuth: []
      responses:
        "204":
          description: All volunteers deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires admin role
  /volunteer/{id}:
    get:
      summary: Get a volunteer by ID
      tags:
        - Volunteers
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      responses:
        "200":
          description: Volunteer details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Volunteer"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Volunteer not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires user or charity role
    post:
      summary: Update a volunteer
      tags:
        - Volunteers
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Volunteer"
      responses:
        "200":
          description: Volunteer updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Volunteer"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Volunteer not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires user role
    delete:
      summary: Delete a volunteer
      tags:
        - Volunteers
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      responses:
        "204":
          description: Volunteer deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Volunteer not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires user role
  /org:
    get:
      summary: Get all organizations
      tags:
        - Organizations
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of organizations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Organization"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires admin or government role
    post:
      summary: Create a new organization
      tags:
        - Organizations
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 5
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                email:
                  type: string
                  format: email
                phone:
                  type: string
                password:
                  type: string
                image:
                  type: string
                  format: binary
                mission:
                  type: string
                  minLength: 5
                  maxLength: 100
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                role:
                  type: string
                  enum: [charity, government]
                  default: charity
              required:
                - name
                - email
                - phone
                - password
                - role
      responses:
        "201":
          description: Organization created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete all organizations
      tags:
        - Organizations
      security:
        - bearerAuth: []
      responses:
        "204":
          description: All organizations deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires admin role
  /org/login:
    post:
      summary: Organization login
      tags:
        - Organizations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /org/{id}:
    get:
      summary: Get an organization by ID
      tags:
        - Organizations
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      responses:
        "200":
          description: Organization details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update an organization
      tags:
        - Organizations
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 5
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                email:
                  type: string
                  format: email
                phone:
                  type: string
                password:
                  type: string
                image:
                  type: string
                  format: binary
                mission:
                  type: string
                  minLength: 5
                  maxLength: 100
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                role:
                  type: string
                  enum: [charity, government]
              required:
                - name
                - email
                - phone
                - password
                - role
      responses:
        "200":
          description: Organization updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires charity or government role
    delete:
      summary: Delete an organization
      tags:
        - Organizations
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      responses:
        "204":
          description: Organization deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires charity, government, or admin role
  /report:
    get:
      summary: Get all reports
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of reports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Report"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires admin or government role
    post:
      summary: Create a new report
      tags:
        - Reports
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  minLength: 4
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                title:
                  type: string
                  minLength: 10
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                description:
                  type: string
                  minLength: 4
                  maxLength: 300
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                image:
                  type: string
                  format: binary
                location:
                  type: object
                  properties:
                    type:
                      type: string
                      enum: [Point]
                    coordinates:
                      type: array
                      items:
                        type: number
                      minItems: 2
                      maxItems: 2
                  required:
                    - type
                    - coordinates
                reportedBy:
                  type: string
                  format: objectId
                  nullable: true
                incident:
                  type: string
                  format: objectId
                  nullable: true
              required:
                - type
                - description
                - location
      responses:
        "201":
          description: Report created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires user role
    delete:
      summary: Delete all reports
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        "204":
          description: All reports deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires admin role
  /report/{id}:
    get:
      summary: Get a report by ID
      tags:
        - Reports
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      responses:
        "200":
          description: Report details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Report not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update a report
      tags:
        - Reports
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  minLength: 4
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                title:
                  type: string
                  minLength: 10
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                description:
                  type: string
                  minLength: 4
                  maxLength: 300
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                image:
                  type: string
                  format: binary
                location:
                  type: object
                  properties:
                    type:
                      type: string
                      enum: [Point]
                    coordinates:
                      type: array
                      items:
                        type: number
                      minItems: 2
                      maxItems: 2
                  required:
                    - type
                    - coordinates
                reportedBy:
                  type: string
                  format: objectId
                  nullable: true
                incident:
                  type: string
                  format: objectId
                  nullable: true
              required:
                - type
                - description
                - location
      responses:
        "200":
          description: Report updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Report not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires user role
    delete:
      summary: Delete a report
      tags:
        - Reports
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      responses:
        "204":
          description: Report deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Report not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires user or admin role
  /user:
    get:
      summary: Get all users
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  minLength: 4
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                lastName:
                  type: string
                  minLength: 4
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                email:
                  type: string
                  format: email
                phone:
                  type: string
                password:
                  type: string
                role:
                  type: string
                  enum: [user, admin]
                  default: user
                image:
                  type: string
                  format: binary
              required:
                - firstName
                - lastName
                - email
                - phone
                - password
                - role
      responses:
        "201":
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete all users
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "204":
          description: All users deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires admin role
  /user/login:
    post:
      summary: User login
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user/{id}:
    get:
      summary: Get a user by ID
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      responses:
        "200":
          description: User details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update a user
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  minLength: 4
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                lastName:
                  type: string
                  minLength: 4
                  pattern: ^[A-Za-z0-9\s.,!?'"&()-]+$
                email:
                  type: string
                  format: email
                phone:
                  type: string
                password:
                  type: string
                role:
                  type: string
                  enum: [user, admin]
                image:
                  type: string
                  format: binary
              required:
                - firstName
                - lastName
                - email
                - phone
                - password
                - role
      responses:
        "200":
          description: User updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires user role
    delete:
      summary: Delete a user
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: objectId
      responses:
        "204":
          description: User deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: Requires user or admin role
security:
  - bearerAuth: []
