openapi: 3.0.3
info:
  title: Charity and Incident Management API
  description: API for managing charity ads, incidents, reports, users, organizations, volunteers, news, and announcements
  version: 1.0.0
servers:
  - url: http://localhost:5555/api
    description: Local development server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        role:
          type: string
          enum: [user, admin]
        image:
          type: string
          nullable: true
        cloudinaryId:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - firstName
        - lastName
        - email
        - phone
        - role
    UserInput:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        password:
          type: string
        role:
          type: string
          enum: [user, admin]
        image:
          type: string
          format: binary
          nullable: true
      required:
        - firstName
        - lastName
        - email
        - phone
        - password
        - role
    Organization:
      type: object
      properties:
        _id:
          type: string
        organizationName:
          type: string
        email:
          type: string
        phone:
          type: string
        taxId:
          type: string
        image:
          type: string
          nullable: true
        cloudinaryId:
          type: string
          nullable: true
        mission:
          type: string
        role:
          type: string
          enum: [charity, government]
        isVerified:
          type: boolean
        status:
          type: string
          enum: [active, inactive]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - organizationName
        - email
        - phone
        - taxId
        - role
        - isVerified
        - status
    OrganizationInput:
      type: object
      properties:
        organizationName:
          type: string
        email:
          type: string
        phone:
          type: string
        password:
          type: string
        taxId:
          type: string
        image:
          type: string
          format: binary
          nullable: true
        mission:
          type: string
        role:
          type: string
          enum: [charity, government]
      required:
        - organizationName
        - email
        - phone
        - password
        - taxId
        - role
    CharityAd:
      type: object
      properties:
        _id:
          type: string
        charity:
          $ref: "#/components/schemas/Organization"
        title:
          type: string
        image:
          type: string
          nullable: true
        cloudinaryId:
          type: string
          nullable: true
        description:
          type: string
        status:
          type: string
          enum: [open, closed]
        volunteers:
          type: array
          items:
            $ref: "#/components/schemas/Volunteer"
        duration:
          type: number
        expiresAt:
          type: string
          format: date-time
        categories:
          type: array
          items:
            type: string
        requirements:
          type: array
          items:
            type: object
            properties:
              location:
                type: string
                nullable: true
              skills:
                type: array
                items:
                  type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - charity
        - title
        - description
        - status
        - duration
        - expiresAt
    CharityAdInput:
      type: object
      properties:
        charity:
          type: string
        title:
          type: string
        image:
          type: string
          format: binary
          nullable: true
        description:
          type: string
        duration:
          type: number
        categories:
          type: array
          items:
            type: string
        requirements:
          type: array
          items:
            type: object
            properties:
              location:
                type: string
                nullable: true
              skills:
                type: array
                items:
                  type: string
      required:
        - charity
        - title
        - description
        - duration
    Incident:
      type: object
      properties:
        _id:
          type: string
        type:
          type: string
        title:
          type: string
        description:
          type: string
        dateOccurred:
          type: string
          format: date-time
        location:
          type: object
          properties:
            type:
              type: string
              enum: [Point]
            coordinates:
              type: array
              items:
                type: number
        status:
          type: string
          enum: [pending, validated]
        reports:
          type: array
          items:
            $ref: "#/components/schemas/Report"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - type
        - title
        - description
        - dateOccurred
        - location
        - status
    Report:
      type: object
      properties:
        _id:
          type: string
        type:
          type: string
        title:
          type: string
          nullable: true
        description:
          type: string
        image:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                nullable: true
              cloudinaryId:
                type: string
                nullable: true
        location:
          type: object
          properties:
            type:
              type: string
              enum: [Point]
            coordinates:
              type: array
              items:
                type: number
            name:
              type: string
              nullable: true
        reportedBy:
          $ref: "#/components/schemas/User"
          nullable: true
        incident:
          $ref: "#/components/schemas/Incident"
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - type
        - description
        - location
    ReportInput:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
          nullable: true
        description:
          type: string
        image:
          type: array
          items:
            type: string
            format: binary
        location:
          type: object
          properties:
            type:
              type: string
              enum: [Point]
            coordinates:
              type: array
              items:
                type: number
            name:
              type: string
              nullable: true
        incident:
          type: string
          nullable: true
      required:
        - type
        - description
        - location
    Volunteer:
      type: object
      properties:
        _id:
          type: string
        charityAdId:
          $ref: "#/components/schemas/CharityAd"
        user:
          $ref: "#/components/schemas/User"
        fullName:
          type: string
        sex:
          type: string
          enum: [male, female]
          nullable: true
        age:
          type: number
        email:
          type: string
        phone:
          type: string
        expertise:
          type: string
        contribution:
          type: string
      required:
        - charityAdId
        - user
        - fullName
        - age
        - email
        - phone
        - expertise
        - contribution
    VolunteerInput:
      type: object
      properties:
        charityAdId:
          type: string
        user:
          type: string
        fullName:
          type: string
        sex:
          type: string
          enum: [male, female]
          nullable: true
        age:
          type: number
        email:
          type: string
        phone:
          type: string
        expertise:
          type: string
        contribution:
          type: string
      required:
        - charityAdId
        - user
        - fullName
        - age
        - email
        - phone
        - expertise
        - contribution
    News:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        images:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                nullable: true
              cloudinaryId:
                type: string
                nullable: true
        incident:
          $ref: "#/components/schemas/Incident"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - title
        - description
        - incident
    NewsInput:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        incident:
          type: string
      required:
        - title
        - description
        - incident
    Announcement:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        charities:
          type: array
          items:
            type: object
            properties:
              charity:
                $ref: "#/components/schemas/Organization"
              response:
                type: string
                enum: [Pending, Accepted, Rejected]
        duration:
          type: number
        expiresAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - title
        - description
        - charities
    AnnouncementInput:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        charities:
          type: array
          items:
            type: object
            properties:
              charity:
                type: string
              response:
                type: string
                enum: [Pending, Accepted, Rejected]
        duration:
          type: number
      required:
        - title
        - description
        - charities
    Error:
      type: object
      properties:
        message:
          type: string
        status:
          type: number
      required:
        - message
        - status
security:
  - bearerAuth: []
paths:
  /user:
    get:
      summary: Get all users
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new user
      tags:
        - User
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        "201":
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete all users
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        "204":
          description: All users deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user/login:
    post:
      summary: User login
      tags:
        - User
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                password:
                  type: string
              required:
                - identifier
                - password
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user/{id}:
    get:
      summary: Get a user by ID
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User ID
      responses:
        "200":
          description: User details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a user
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        "200":
          description: User updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete a user
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User ID
      responses:
        "204":
          description: User deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user/changePassword/{id}:
    patch:
      summary: Change user password
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
              required:
                - oldPassword
                - newPassword
      responses:
        "200":
          description: Password changed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /org:
    get:
      summary: Get all organizations
      tags:
        - Organization
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of organizations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Organization"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new organization
      tags:
        - Organization
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/OrganizationInput"
      responses:
        "201":
          description: Organization created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete all organizations
      tags:
        - Organization
      security:
        - bearerAuth: []
      responses:
        "204":
          description: All organizations deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /org/login:
    post:
      summary: Organization login
      tags:
        - Organization
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                password:
                  type: string
              required:
                - identifier
                - password
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  organization:
                    $ref: "#/components/schemas/Organization"
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /org/{id}:
    get:
      summary: Get an organization by ID
      tags:
        - Organization
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Organization ID
      responses:
        "200":
          description: Organization details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        "404":
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update an organization
      tags:
        - Organization
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Organization ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/OrganizationInput"
      responses:
        "200":
          description: Organization updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete an organization
      tags:
        - Organization
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Organization ID
      responses:
        "204":
          description: Organization deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /org/verify/{id}:
    patch:
      summary: Verify an organization
      tags:
        - Organization
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Organization ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                isVerified:
                  type: boolean
              required:
                - isVerified
      responses:
        "200":
          description: Organization verified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /charityAd:
    get:
      summary: Get all charity ads
      tags:
        - Charity Ad
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of charity ads
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CharityAd"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new charity ad
      tags:
        - Charity Ad
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CharityAdInput"
      responses:
        "201":
          description: Charity ad created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CharityAd"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete all charity ads
      tags:
        - Charity Ad
      security:
        - bearerAuth: []
      responses:
        "204":
          description: All charity ads deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /charityAd/{id}:
    get:
      summary: Get a charity ad by ID
      tags:
        - Charity Ad
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Charity Ad ID
      responses:
        "200":
          description: Charity ad details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CharityAd"
        "404":
          description: Charity ad not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update a charity ad
      tags:
        - Charity Ad
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Charity Ad ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CharityAdInput"
      responses:
        "200":
          description: Charity ad updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CharityAd"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete a charity ad
      tags:
        - Charity Ad
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Charity Ad ID
      responses:
        "204":
          description: Charity ad deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /incidents:
    get:
      summary: Get all incidents
      tags:
        - Incidents
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of incidents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Incident"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete all incidents
      tags:
        - Incidents
      security:
        - bearerAuth: []
      responses:
        "204":
          description: All incidents deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /incidents/{id}:
    get:
      summary: Get an incident by ID
      tags:
        - Incidents
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Incident ID
      responses:
        "200":
          description: Incident details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incident"
        "404":
          description: Incident not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete an incident
      tags:
        - Incidents
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Incident ID
      responses:
        "204":
          description: Incident deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /incidents/images/{id}:
    get:
      summary: Get images for an incident
      tags:
        - Incidents
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Incident ID
      responses:
        "200":
          description: List of image URLs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "404":
          description: Incident not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /report:
    get:
      summary: Get all reports
      tags:
        - Report
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of reports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Report"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new report
      tags:
        - Report
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ReportInput"
      responses:
        "201":
          description: Report created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete all reports
      tags:
        - Report
      security:
        - bearerAuth: []
      responses:
        "204":
          description: All reports deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /report/{id}:
    get:
      summary: Get a report by ID
      tags:
        - Report
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Report ID
      responses:
        "200":
          description: Report details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
        "404":
          description: Report not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update a report
      tags:
        - Report
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Report ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ReportInput"
      responses:
        "200":
          description: Report updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete a report
      tags:
        - Report
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Report ID
      responses:
        "204":
          description: Report deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /volunteer:
    get:
      summary: Get all volunteers
      tags:
        - Volunteer
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of volunteers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Volunteer"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Register a new volunteer
      tags:
        - Volunteer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/VolunteerInput"
      responses:
        "201":
          description: Volunteer registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Volunteer"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete all volunteers
      tags:
        - Volunteer
      security:
        - bearerAuth: []
      responses:
        "204":
          description: All volunteers deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /volunteer/{id}:
    get:
      summary: Get a volunteer by ID
      tags:
        - Volunteer
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Volunteer ID
      responses:
        "200":
          description: Volunteer details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Volunteer"
        "404":
          description: Volunteer not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update a volunteer
      tags:
        - Volunteer
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Volunteer ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/VolunteerInput"
      responses:
        "200":
          description: Volunteer updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Volunteer"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete a volunteer
      tags:
        - Volunteer
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Volunteer ID
      responses:
        "204":
          description: Volunteer deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /news:
    get:
      summary: Get all news
      tags:
        - News
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of news
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/News"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new news item
      tags:
        - News
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/NewsInput"
      responses:
        "201":
          description: News created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/News"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete all news
      tags:
        - News
      security:
        - bearerAuth: []
      responses:
        "204":
          description: All news deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /news/{id}:
    get:
      summary: Get a news item by ID
      tags:
        - News
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: News ID
      responses:
        "200":
          description: News details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/News"
        "404":
          description: News not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update a news item
      tags:
        - News
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: News ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/NewsInput"
      responses:
        "200":
          description: News updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/News"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Partially update a news item
      tags:
        - News
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: News ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/NewsInput"
      responses:
        "200":
          description: News updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/News"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete a news item
      tags:
        - News
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: News ID
      responses:
        "204":
          description: News deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /announcement:
    get:
      summary: Get all announcements
      tags:
        - Announcement
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of announcements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Announcement"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new announcement
      tags:
        - Announcement
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/AnnouncementInput"
      responses:
        "201":
          description: Announcement created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Announcement"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete all announcements
      tags:
        - Announcement
      security:
        - bearerAuth: []
      responses:
        "204":
          description: All announcements deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /announcement/{id}:
    get:
      summary: Get an announcement by ID
      tags:
        - Announcement
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Announcement ID
      responses:
        "200":
          description: Announcement details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Announcement"
        "404":
          description: Announcement not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update an announcement
      tags:
        - Announcement
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Announcement ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/AnnouncementInput"
      responses:
        "200":
          description: Announcement updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Announcement"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete an announcement
      tags:
        - Announcement
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Announcement ID
      responses:
        "204":
          description: Announcement deleted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
